/// <reference types="node" />
import { Uri } from 'coc.nvim';
import { URL } from 'url';
import { ServerBinded, ServerRoute } from './server';
export declare class ResourceUri {
    readonly url: URL;
    readonly binded: ServerBinded;
    static parse(urlOrStr: string, binded: ServerBinded): ResourceUri | undefined;
    static parse(urlOrStr: URL, binded: ServerBinded): ResourceUri;
    readonly forbidden: boolean;
    readonly isResource: boolean;
    readonly localPath: string | undefined;
    constructor(url: URL, binded: ServerBinded);
    private parseLocalPath;
    private getForbidden;
    readFile(): Promise<Buffer>;
}
/**
 * Construct a uri that can load resources inside a webview
 *
 * We encode the resource component of the uri so that on the main thread
 * we know where to load the resource from (remote or truly local):
 *
 * @param resource Uri of the resource to load.
 */
export declare function asWebviewUri(resource: Uri, binded: ServerBinded): Uri;
export declare function updateRoutes(routes: Map<string, ServerRoute>): void;
